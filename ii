#!/bin/bash
#
# USAGE: ii FILE [COMMAND]
#  DESC: Invisible ink.
#        Decrypt or create the given FILE. COMMAND will be run on the
#        cleartext. When COMMAND exits, the cleartext will be re-encrypted.
#        The default command is 'EDITOR', in which case the value of the
#        $EDITOR variable will be used as the actual command.
#    BY: Macquarie Sharpless <macquarie.sharpless@gmail.com> 2014
#        grimheart.github.com



# Generic error handler
function err {
	local msg=${@}
	echo "Error: ${msg}"
	expunge ${II_CLEARFILE}
	exit 1
}

# Ensure that the given file is removed
function expunge {
	local file="${@}"
	rm -f "${file}" &> /dev/null
}



II_FILE=${1}
[ -z "${II_FILE}" ] && err "no path given"
II_CMD=${2}
[ -z "${II_CMD}" ] && II_CMD="EDITOR"

II_CLEARFILE="/tmp/iiclear"
II_KEYUID="invisibleink"



# Prepare cleartext file for editing
expunge   ${II_CLEARFILE}
touch     ${II_CLEARFILE}
chmod 600 ${II_CLEARFILE}

# Decrypt the given file if it already exists
if [ -e ${II_FILE} ]; then
	gpg -r ${II_KEYUID} --output ${II_CLEARFILE} --yes -d ${II_FILE} || err "decryption failed"
fi

case ${II_CMD} in
  # The 'edit' command is the default command; rather than a specific program,
  # it will use your $EDITOR to edit the cleartext.
  "EDITOR")
    # Edit the cleartext file
    ${EDITOR} ${II_CLEARFILE}
  ;;
  *)
    # Run an arbitrary command over the cleartext file
    ${II_CMD} ${II_CLEARFILE}
  ;;
esac

# (Re-)encrypt the (edited?) cleartext
gpg -r ${II_KEYUID} -e ${II_CLEARFILE}
cat ${II_CLEARFILE}.gpg > ${II_FILE}

# Expunge cleartext and temporary files
expunge ${II_CLEARFILE}
expunge ${II_CLEARFILE}.gpg

