#!/bin/bash
#
# USAGE: ii FILE [COMMAND]
#  DESC: Invisible ink.
#        Decrypt or create the given FILE. COMMAND will be run on the
#        cleartext. When COMMAND exits, the cleartext will be re-encrypted.
#        The default command is 'EDITOR', in which case the value of the
#        $EDITOR variable will be used as the actual command.
#    BY: Macquarie Sharpless <macquarie.sharpless@gmail.com> 2014
#        grimheart.github.com



# Generic error handler
ii.err() {
	local msg=${@}
	echo "Error: ${msg}"
	exit 1
}

# Expunge temporary files, including the cleartext
ii.cleanup() {
  [ -e "${II_TEMPDIR}" ] && rm -rf "${II_TEMPDIR}"
}



# Cleanup on any exit
trap "ii.cleanup" EXIT

# Get args
II_FILE=${1}
# Make sure the path given is valid for our purposes
if   [ ! "${II_FILE}" ]; then
  ii.err "no path given"
elif [ ! -f "${II_FILE}" ] && [ -e "${II_FILE}" ]; then
  ii.err "'${II_FILE}' is an invalid target"
fi

II_CMD=${2}
[ "${II_CMD}"  ] || II_CMD="EDITOR"

# Set up environment
II_TEMPDIR=$(mktemp -dt "invisibleink.XXXXXX") || ii.err "failed to create temporary directory"
II_CLEARFILE="${II_TEMPDIR}/text"
II_KEYUID="invisibleink"



# Decrypt the given file if it already exists
if [ -e "${II_FILE}" ]; then
	gpg -q -r "${II_KEYUID}" --output "${II_CLEARFILE}" -d "${II_FILE}" || ii.err "decryption failed"
fi

case ${II_CMD} in
  # The 'EDITOR' command is the default command; rather than a specific
  # program, it will use your $EDITOR to edit the cleartext.
  "EDITOR")
    # Edit the cleartext file
    ${EDITOR} "${II_CLEARFILE}"
  ;;
  *)
    # Run an arbitrary command over the cleartext file
    ${II_CMD} "${II_CLEARFILE}"
  ;;
esac

# (Re-)encrypt the (edited?) cleartext
gpg -r "${II_KEYUID}" -e "${II_CLEARFILE}" || ii.err "encryption failed - any modifications to the cleartext will be lost"
cat "${II_CLEARFILE}.gpg" > "${II_FILE}"

